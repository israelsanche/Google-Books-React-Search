{"ast":null,"code":"import _classCallCheck from \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/src/components/Nav/index.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nvar Navbars =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbars, _Component);\n\n  function Navbars() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navbars);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navbars)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      width: window.innerWidth\n    };\n\n    _this.updateWidth = function () {\n      var newState = {\n        width: window.innerWidth\n      };\n\n      if (_this.state.open && newState.width > 991) {\n        newState.open = false;\n      }\n\n      _this.setState(newState);\n    };\n\n    _this.toggleNav = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Navbars, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWidth);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWidth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Task-Bash\"), React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        href: \"/summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Summary\"), React.createElement(Nav.Link, {\n        href: \"/client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Client\"), React.createElement(Nav.Link, {\n        href: \"/board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Board\"), React.createElement(Nav.Link, {\n        href: \"/logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: \"mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outline-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Search\"))));\n    }\n  }]);\n\n  return Navbars;\n}(Component);\n\nexport default Navbars;\n{\n  /* <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n         <Link className=\"navbar-brand\" to=\"/\">\n           Google Books\n         </Link>\n         <button\n           onClick={this.toggleNav}\n           className=\"navbar-toggler\"\n           data-toggle=\"collapse\"\n           data-target=\"#navbarNav\"\n           aria-controls=\"navbarNav\"\n           aria-expanded=\"false\"\n           aria-label=\"Toggle navigation\"\n         >\n           <span className=\"navbar-toggler-icon\" />\n         </button>\n         <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n           <ul className=\"navbar-nav\">\n             <li className=\"nav-item\">\n               <Link\n                 onClick={this.toggleNav}\n                 className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                 to=\"/\"\n               >\n                 Search\n               </Link>\n             </li>\n             <li className=\"nav-item\">\n               <Link\n                 onClick={this.toggleNav}\n                 className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                 to=\"/saved\"\n               >\n                 Saved\n               </Link>\n             </li>\n           </ul>\n         </div>\n       </nav> */\n}","map":{"version":3,"sources":["/Users/israelsanchez/GoogleBooks ReactSearch/Google-Books-React-Search/client/src/components/Nav/index.js"],"names":["React","Component","Link","Navbar","Nav","Button","Form","FormControl","Navbars","state","open","width","window","innerWidth","updateWidth","newState","setState","toggleNav","addEventListener","removeEventListener"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,KAAK,EAAEC,MAAM,CAACC;AAFR,K;;UAKRC,W,GAAc,YAAM;AAClB,UAAMC,QAAQ,GAAG;AAAEJ,QAAAA,KAAK,EAAEC,MAAM,CAACC;AAAhB,OAAjB;;AAEA,UAAI,MAAKJ,KAAL,CAAWC,IAAX,IAAmBK,QAAQ,CAACJ,KAAT,GAAiB,GAAxC,EAA6C;AAC3CI,QAAAA,QAAQ,CAACL,IAAT,GAAgB,KAAhB;AACD;;AAED,YAAKM,QAAL,CAAcD,QAAd;AACD,K;;UAEDE,S,GAAY,YAAM;AAChB,YAAKD,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAApB,OAAd;AACD,K;;;;;;;wCAEmB;AAClBE,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,WAAvC;AACD;;;2CAEsB;AACrBF,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,WAA1C;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAFF,EAQE,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,WAAW,EAAC,QAArC;AAA8C,QAAA,SAAS,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CARF,CADF,CADF;AAiBD;;;;EA9CmBb,S;;AAiDtB,eAAeO,OAAf;AAEA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCe","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nclass Navbars extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand >Task-Bash</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/summary\">Summary</Nav.Link>\n            <Nav.Link href=\"/client\">Client</Nav.Link>\n            <Nav.Link href=\"/board\">Board</Nav.Link>\n            <Nav.Link href=\"/logout\">Logout</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-info\">Search</Button>\n          </Form>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navbars;\n\n{/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Google Books\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav> */}"]},"metadata":{},"sourceType":"module"}